var mqtt = {
    host: "SERVER",
    useSSL: false,
    port: 1884,
    client: "USERID",
    username: "MQTT_LOGIN",
    password: "MQTT_PASSWORD"
};

var bulb={dimmer:100,on:!1,is_rgb:!1,rgb:"#ffcf00"};function showBulb(){var e,o,n,t,r;bulb.is_rgb?(n=bulb.on?hexToRgb(bulb.rgb).r:255,t=bulb.on?hexToRgb(bulb.rgb).g:255,r=bulb.on?hexToRgb(bulb.rgb).b:255,$("#state").text(bulb.on?rgbToHex(n,t,r):"off"),e=128<(299*n+587*t+114*r)/1e3?"#000000":"#ffffff",$("#state").css({color:e})):(o=bulb.on?bulb.dimmer:0,n=255,t=Math.round(255-48*o/100),r=Math.round(255-255*o/100),$("#state").text(bulb.on?bulb.dimmer+"%":"off"),$("#state").css({color:"#000000"})),$("#bg").css({"background-color":rgbToHex(n,t,r)})}function getContrastYIQ(e){return 128<=(299*parseInt(e.substr(0,2),16)+587*parseInt(e.substr(2,2),16)+114*parseInt(e.substr(4,2),16))/1e3?"black":"white"}function setState(e){console.log("Set state: "+(e?"on":"off")),bulb.on=e,showBulb()}function setRGBMode(e){console.log("Set rgb-mode: "+(e?"True":"False")),bulb.is_rgb=e,showBulb()}function setColor(e){bulb.rgb=null===e?"#ffcf00":e,console.log("Set color: "+bulb.rgb),showBulb()}function setDimmer(e){console.log("Set dimmer: "+e),bulb.dimmer=e,showBulb()}function componentToHex(e){var o=e.toString(16);return 1==o.length?"0"+o:o}function rgbColor(e){return null!==hexToRgb(e)?e:null!==hexToRgb(rgbaToHex(e))?rgbaToHex(e):null}function hexToRgb(e){var o=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e);return o?{r:parseInt(o[1],16),g:parseInt(o[2],16),b:parseInt(o[3],16)}:null}function rgbToHex(e,o,n){return"#"+componentToHex(e)+componentToHex(o)+componentToHex(n)}function rgbaToHex(e){return(e=e.match(/^rgba?[\s+]?\([\s+]?(\d+)[\s+]?,[\s+]?(\d+)[\s+]?,[\s+]?(\d+)[\s+]?/i))&&4===e.length?"#"+("0"+parseInt(e[1],10).toString(16)).slice(-2)+("0"+parseInt(e[2],10).toString(16)).slice(-2)+("0"+parseInt(e[3],10).toString(16)).slice(-2):null}function onError(){console.warn("Connection error!")}function onConnected(){console.log("connected"),Client.subscribe("iot_practice/"+mqtt.client+"/lamp/#");new Date;Client.publish("iot_practice/"+mqtt.client+"/lamp/init",'{"on":"'+bulb.on+'", "is_rgb":"'+bulb.is_rgb+'", "dimmer":"'+bulb.dimmer+'", "rgb":"'+bulb.rgb+'" }')}function onConnectionLost(e){console.warn("Disconnected!"),e.errorCode}function onMessageArrived(e){try{var o=e.payloadString,n=o.trim().toLowerCase(),t=e.topic.split("/");switch(t[t.length-1].trim()){case"lamp":switch(n){case"on":setState(!0);break;case"off":setState(!1);break;default:console.error("Unknown command '"+o+"'")}break;case"mode":switch(n){case"rgb":case"true":setRGBMode(!0);break;case"dimmer":case"false":setRGBMode(!1);break;default:console.error("Unknown command '"+o+"'")}break;case"init":showBulb();break;case"value":var r=parseInt(n,10);Number.isNaN(r)?console.error("Unknown dimmer value '"+o+"'"):r<0||100<r?console.error("Out of range for dimmer value '"+r+"'"):setDimmer(r);break;case"color":setColor(rgbColor(n))}}catch(e){console.error(e)}}function connect(e){var o=void 0===e?mqtt.host:e;console.log("Connecting to "+o),Client=new Paho.MQTT.Client(o,mqtt.port,mqtt.client),Client.onConnectionLost=onConnectionLost,Client.onMessageArrived=onMessageArrived,Client.connect({useSSL:mqtt.useSSL,userName:mqtt.username,password:mqtt.password,onSuccess:onConnected,onFailure:onError})}Client=void 0,$(document).ready(function(){connect()});